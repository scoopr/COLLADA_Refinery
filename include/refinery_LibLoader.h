/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class refinery_LibLoader */

#ifndef _Included_refinery_LibLoader
#define _Included_refinery_LibLoader
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     refinery_LibLoader
 * Method:    init
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_refinery_LibLoader_init
  (JNIEnv *, jobject);

/*
 * Class:     refinery_LibLoader
 * Method:    getNumAvailableConditioners
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_refinery_LibLoader_getNumAvailableConditioners
  (JNIEnv *, jobject);

/*
 * Class:     refinery_LibLoader
 * Method:    getConditioner
 * Signature: (I)Lrefinery/ConditionerTemplate;
 */
JNIEXPORT jobject JNICALL Java_refinery_LibLoader_getConditioner
  (JNIEnv *, jobject, jint);

/*
 * Class:     refinery_LibLoader
 * Method:    loadConditioner
 * Signature: (Ljava/lang/String;Ljava/lang/String;Lrefinery/document/ConditionerWrapper;)Z
 */
JNIEXPORT jboolean JNICALL Java_refinery_LibLoader_loadConditioner
  (JNIEnv *, jobject, jstring, jstring, jobject);

/*
 * Class:     refinery_LibLoader
 * Method:    removeConditioner
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_refinery_LibLoader_removeConditioner
  (JNIEnv *, jobject, jstring);

/*
 * Class:     refinery_LibLoader
 * Method:    loadBoolOptions
 * Signature: (Ljava/lang/String;Lrefinery/document/ConditionerWrapper;)Z
 */
JNIEXPORT jboolean JNICALL Java_refinery_LibLoader_loadBoolOptions
  (JNIEnv *, jobject, jstring, jobject);

/*
 * Class:     refinery_LibLoader
 * Method:    loadStringOptions
 * Signature: (Ljava/lang/String;Lrefinery/document/ConditionerWrapper;)Z
 */
JNIEXPORT jboolean JNICALL Java_refinery_LibLoader_loadStringOptions
  (JNIEnv *, jobject, jstring, jobject);

/*
 * Class:     refinery_LibLoader
 * Method:    loadFloatOptions
 * Signature: (Ljava/lang/String;Lrefinery/document/ConditionerWrapper;)Z
 */
JNIEXPORT jboolean JNICALL Java_refinery_LibLoader_loadFloatOptions
  (JNIEnv *, jobject, jstring, jobject);

/*
 * Class:     refinery_LibLoader
 * Method:    changeConditionerName
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_refinery_LibLoader_changeConditionerName
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     refinery_LibLoader
 * Method:    execute
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_refinery_LibLoader_execute
  (JNIEnv *, jobject, jstring);

/*
 * Class:     refinery_LibLoader
 * Method:    loadDocument
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_refinery_LibLoader_loadDocument
  (JNIEnv *, jclass, jstring);

/*
 * Class:     refinery_LibLoader
 * Method:    saveDocument
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_refinery_LibLoader_saveDocument
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     refinery_LibLoader
 * Method:    setInputNumber
 * Signature: (Ljava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_refinery_LibLoader_setInputNumber
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     refinery_LibLoader
 * Method:    setInput
 * Signature: (Ljava/lang/String;ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_refinery_LibLoader_setInput
  (JNIEnv *, jobject, jstring, jint, jstring);

/*
 * Class:     refinery_LibLoader
 * Method:    setOutput
 * Signature: (Ljava/lang/String;ILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_refinery_LibLoader_setOutput
  (JNIEnv *, jobject, jstring, jint, jstring);

/*
 * Class:     refinery_LibLoader
 * Method:    setBoolOption
 * Signature: (Ljava/lang/String;Ljava/lang/String;Z)V
 */
JNIEXPORT void JNICALL Java_refinery_LibLoader_setBoolOption
  (JNIEnv *, jobject, jstring, jstring, jboolean);

/*
 * Class:     refinery_LibLoader
 * Method:    setStringOption
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_refinery_LibLoader_setStringOption
  (JNIEnv *, jobject, jstring, jstring, jstring);

/*
 * Class:     refinery_LibLoader
 * Method:    setFloatOption
 * Signature: (Ljava/lang/String;Ljava/lang/String;F)V
 */
JNIEXPORT void JNICALL Java_refinery_LibLoader_setFloatOption
  (JNIEnv *, jobject, jstring, jstring, jfloat);

/*
 * Class:     refinery_LibLoader
 * Method:    cloneDocument
 * Signature: (Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_refinery_LibLoader_cloneDocument
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     refinery_LibLoader
 * Method:    clearDOM
 * Signature: (V)V
 */
JNIEXPORT void JNICALL Java_refinery_LibLoader_clearDOM
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
